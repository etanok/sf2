<?php

namespace Autoformation\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    public function recupererArticlesParNomEtDate()
    {
        $queryBuilder = $this->createQueryBuilder('a');
        $this->recupererArticlesAnneesEnCours($queryBuilder);
        return $queryBuilder->getQuery()->getResult();
    }

    public function recupererArticlesAnneesEnCours( \Doctrine\ORM\QueryBuilder $queryBuilder )
    {
        return  $queryBuilder->andWhere("a.date BETWEEN :debut AND :fin")
                             ->setParameter(':debut', '2015-01-01')
                             ->setParameter(':fin', '2015-12-31');
    }

    public function recupererArticlesAnneesEnCoursDQL(\Doctrine\ORM\QueryBuilder $queryBuilder)
    {
        //$requeteDql = $this->
    }

    public function getArticles($nbrParPage, $page)
    {
        if($page < 1) {
            throw new \InvalidArgumentException("L'argument page ne peut etre inferieur a 1 {page = $page}");
        }
        $queryBuilder = $this->createQueryBuilder('a')
                             ->leftJoin('a.image', 'i')
                                ->addSelect('i')
                             ->leftJoin('a.categories', 'c')
                                ->addSelect('c')
                             ->orderBy('a.date', 'ASC');
        $query = $queryBuilder->getQuery();
        $query->setFirstResult(($page + 1) * $nbrParPage)
              ->setMaxResults($nbrParPage);
        return new Paginator($query);
    }
}
